/* Inputs and form controls, mainly non button */

input {
  box-sizing: border-box;
}

/* Form controls and interactive states */
.form-control {
  display: flex;
}

.form-control:disabled,
.form-control[readonly],
input[readonly] {
  color: var(--txt-gray);
  background-color: $bg-gray;
  :focus,
  :hover {
    pointer-events: none;
  }
}

input.form-control,
input.form-control.is-valid,
// input.form-control.is-invalid,
input.form-control:focus,
input.form-control.is-valid:focus
// input.form-control.is-invalid:focus
{
  outline: $border-width solid var(--border-gray);
  background-image: none;
  background-color: var(--contrast-color);
  transition: none;
  border: none;
  box-shadow: none;
}

.form-control::placeholder,
input::placeholder {
  font-family: $inter-regular;
  font-size: 1.5rem;
}

:hover:not(:focus):not(:disabled) {
  &[type="text"],
  &[type="password"],
  &[type="email"] {
    //border-top: $border-width solid var(--contrast-color);
    padding-top: calc(1.25rem + $border-width);
    border-bottom: $border-width solid var(--body-txt) !important;
  }
}

input.form-control.is-invalid,
input.form-control.is-invalid:focus {
  // outline: $border-width solid $error-red;
  background-image: none;
}

input.form-control.is-invalid,
input.form-control.is-invalid:focus {
  // outline: $border-width solid $error-red;
  background-image: none;
}

//tab-focus
:focus-visible,
#mfa-security-key:focus {
  outline: $border-width dashed var(--body-txt) !important;
  transition: none !important;

  //has parents with overflow hidden
  &.accordion__button,
  table & {
    outline-offset: -$border-width;
  }
  &.toggle-checkbox + .toggle-switch {
    outline: $border-width dashed var(--body-txt) !important;
    transition: none;
  }
}

//removing chrome autocomplete babyblue
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
  -webkit-box-shadow: 0 0 0 1000px var(--contrast-color) inset !important;
}

/* Radio buttons */
input[type="radio"] {
  //remove standard background appearance
  appearance: none;

  //create custom radio button appearance
  display: inline-block;
  width: 1rem;
  height: 1rem;
  min-width: 1rem;
  min-height: 1rem;
  align-self: center;

  //background-color only for content
  background-clip: content-box;
  box-shadow: 0 5px 17px rgb(89 89 89 / 7%);
  border: $border-width solid $bright-orange;
  background-color: transparent;
  border-radius: 50%;

  //to prevent overwrite from input padding, this ensures that the radio button remains round
  padding: 0;

  &:hover {
    background-color: $bright-orange;
    cursor: pointer;
    border: none;
  }

  &:checked {
    background-color: $bright-orange;
    border: none;

    .error {
      background: var(--error-red);
      color: var(--contrast-color);
      border: none;
    }
  }
}

//optional styles for centering radio buttons
.radio-input-container {
  display: flex;

  label {
    margin-top: 5px;

    &:hover {
      cursor: pointer;
    }
  }
  span {
    font-size: 1.25rem;
    align-self: center;
    color: var(--body-txt);
    font-family: $inter-regular;
    font-weight: normal;
    margin: 0 2rem 0 0;
    margin-left: 8px;
  }
}

/* Login username-pw / reset-password set-new-password */
.password-input {
  display: flex;
  position: relative;

  input[name="currentPassword"].is-valid {
    background-image: none;
  }
}

#copy-new-password {
  background-color: var(--border-gray);
}

input#display-none-new-password {
  display: none;
}

/* Checkbox */
input[type="checkbox"] {
  height: 1rem;
  width: 1rem;
  margin-right: 0.5rem;
  border: none;
  outline: none;
  box-shadow: none;
}

/* Switch toggle */
.toggle {
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  align-items: center;

  > legend,
  > span {
    flex: 1;
  }
  > span {
    margin-right: 10px;
  }
}

.toggle-switch {
  display: inline-block;
  background: var(--border-gray);
  border-radius: 16px;
  width: 54px;
  height: 28px;
  position: relative;
  vertical-align: middle;
  transition: all 0.25s;

  &::before,
  &::after {
    content: "";
  }

  &::before {
    display: block;
    background: var(--contrast-color);
    border-radius: 50%;
    width: 22px;
    height: 22px;
    position: absolute;
    top: 3px;
    left: 3px;
    transition: left 0.25s;
  }

  // &:hover {
  //   background: $bright-orange;
  // }

  .toggle:hover &::before {
    transform: scale(0.9);
  }

  .toggle-checkbox:checked + & {
    background: $bright-orange;

    &::before {
      left: 29px;
    }
  }
}

.toggle-checkbox {
  position: absolute;
  width: auto;
  @extend .visuallyhidden;
}

/* Select */
select {
  padding: 5px;
  border-radius: 3px;
  width: 100%;
  background-color: var(--contrast-color);
  height: 40px;
  margin-top: 3px;
}

//react-select
.select__multi-value__label {
  font-size: 1.25rem !important;
  align-self: center !important;
}

/* Cross browser */

//Chrome, Safari, Edge, Opera
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  appearance: none;
  margin: 0;
}

//Firefox
input[type="number"] {
  appearance: textfield;
}

input.display-none {
  display: none;
}

input:-webkit-autofill {
  background-color: transparent !important;
  box-shadow: 0 0 0 50px var(--contrast-color) inset;
}

/* Responsive */
@media (max-width: $bp-sm) {
  .form-control,
  input,
  .radio-input-container span {
    font-size: 1rem;
  }

  .input-container {
    margin: 0;
  }

  .form-control::placeholder,
  input::placeholder {
    font-size: 1rem;
  }
}

@media (max-width: $bp-md) {
  .radio-input-container {
    flex-direction: column;
  }
}
