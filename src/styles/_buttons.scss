button:disabled {
  cursor: not-allowed;
  pointer-events: all;
  opacity: 0.4;
}

a.button,
button {
  font-family: $akkurat;
  letter-spacing: 1px;
  font-size: $txt-md;
  font-weight: bold;
  line-height: 1;
  text-transform: uppercase;
  height: 3rem;
  border-radius: 1.5rem;
  box-shadow: 0 5px 17px rgb(89 89 89 / 7%);
  transition: all 0.3s ease;
  outline: 0;
  border: none;
  cursor: pointer;

  &:disabled,
  .disabled {
    cursor: not-allowed !important;
    pointer-events: all !important;
    border-color: inherit;
    color: var(--contrast-color);

    &.primary {
      background-color: $btn-orange;
    }
  }
}

button.primary,
button.primary:not(:disabled):not(.disabled):active,
button.primary:not(:disabled):not(.disabled):focus,
button.primary:not(:disabled):not(.disabled):active:focus,
button.primary:not(:disabled):not(.disabled):hover {
  color: #fff;
  border: solid 2px $bright-orange;
  background-color: $btn-orange;
  box-shadow: none;
  min-width: 100px;

  //min-width: min-content;
  padding: 0 1.125rem;

  &.sm {
    padding: 0.5rem 1rem;
    font-size: 13px;
    min-width: fit-content;
    width: auto;
    height: auto;
    margin-top: 0;
    margin-bottom: 0;
    letter-spacing: 1px;
  }
}

button.secondary,
button.secondary:not(:disabled):not(.disabled):active,
button.secondary:not(:disabled):not(.disabled):focus,
button.secondary:not(:disabled):not(.disabled):active:focus,
button.secondary:not(:disabled):not(.disabled):hover {
  color: var(--txt-orange);
  border: solid 2px $bright-orange;
  background-color: var(--contrast-color);
  box-shadow: none;
  min-width: 100px;
  padding: 0 1.125rem;

  /* Login, Logout, Register button in Header */
  &.sm {
    padding: 0.5rem 1rem;
    font-size: 13px;
    min-width: fit-content;
    width: auto;
    height: auto;
    margin-top: 0;
    margin-bottom: 0;
    letter-spacing: 1px;
  }
}

button.primary,
button.secondary,
.mfa-select .react-select__control {
  &:hover {
    transform: scale(0.95);

    &:disabled,
    .disabled {
      transform: scale(1);
    }
  }
}

/* CLOSE buttons in modals */
button.close {
  background-color: transparent;
  margin: 0;
  box-shadow: none;
  height: 1rem;
  width: 1rem;

  position: relative;
  display: inline-block;
  cursor: pointer;

  &:hover,
  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled):focus,
  &:not(:disabled):not(.disabled):active:focus {
    color: var(--txt-gray);
    background-color: transparent;
    box-shadow: none;
  }

  &.sm {
    font-size: $txt-xs;
  }
}

.close::before,
.close::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 20px;
  height: 2px;
  background-color: var(--txt-gray);
  transform-origin: center;
  :hover > & {
    background-color: var(--body-txt);
  }
}

.close::before {
  transform: translate(-50%, -50%) rotate(45deg);
}

.close::after {
  transform: translate(-50%, -50%) rotate(-45deg);
}

/* styles for links that are also buttons */
button.link {
  background-color: transparent;
  color: var(--txt-orange);
  border-radius: 0;
  border: none;
  box-shadow: none;
  margin: 0;
  text-decoration: none;
  padding: 0;

  &:hover,
  &:not[disabled],
  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled):focus,
  &:not(:disabled):not(.disabled):active:focus {
    color: var(--txt-orange);
    background-color: transparent;
    text-decoration: underline;
    box-shadow: none;
  }

  &.sm {
    font-size: $txt-xs;
  }

  &.normal-case {
    text-transform: none;
  }

  &.lowercase {
    text-transform: lowercase;

    &.hide {
      display: none;
    }
  }
  &.disabled,
  &:disabled,
  &[disabled] {
    color: var(--txt-gray);
    opacity: 1;
    box-shadow: none;
    text-decoration: none;
  }
}

/* icon left of button text */
button.icon {
  display: flex;
  align-items: center;
  justify-content: center;

  svg,
  img {
    margin-right: 0.5rem;
    width: auto;
    transition: transform 0.5s;
  }

  //round arrow update link
  &.refresh:hover svg {
    transform-origin: center;
    transform: rotate(360deg);
  }
  &.refresh[disabled]:hover svg {
    transform: none;
  }
}

/* TODO possibly replace with .buttons */
.flex-buttons {
  display: flex;
  column-gap: 1rem;
  margin: 1em 0 0;

  button {
    min-width: 100px;
  }

  button[type="submit"] {
    order: 2;
  }
}

/* Wraps all buttons for responsive behaviour independent on number */
.buttons {
  display: flex;
  column-gap: 1rem;
  padding: 0.5rem 0;
  width: 100%;

  button {
    min-width: 100px;
  }

  @media (min-width: $bp-xs) {
    width: auto;
  }

  @media (max-width: $bp-md) {
    justify-content: center;
    align-self: normal;
  }

  @media (max-width: $bp-xs) {
    flex-direction: column-reverse;

    button[type="submit"] {
      order: 1;
    }

    button {
      margin: 0.5rem 0;
    }
  }
  &-center {
    @extend .buttons;
    align-items: center;
  }
}

//textual toggle control, eg. copy/show
.txt-toggle-btn {
  position: absolute;
  right: 1rem;
}

/* Instance/icon unique styles to be set in targeted css */
button.icon-only {
  @extend .icon;

  box-shadow: none;
  background: transparent;
  border-color: transparent;
  margin: 0;
  padding: 0;
}

@media (max-width: $bp-xs) {
  button:not(.sm) {
    font-size: $txt-sm;
  }

  button.primary,
  button.secondary {
    width: 100%;
  }

  button.link {
    width: auto;
    padding: 0;
  }
}

//menu name control
button.header-user {
  &:hover,
  &:focus-within {
    background-color: var(--body-gray) !important;
  }
}

//Scroll To top button
button.scroll-to-top {
  display: block;
  position: fixed;
  bottom: 7rem;
  right: 1rem;
  // round button
  border-radius: 50% !important;
  min-width: fit-content !important;
  width: 50px;
  height: 50px;
  padding: 0 !important;

  @media (max-width: $bp-sm) {
    width: 40px;
    height: 40px;
    right: 0.5rem;
    bottom: 6.5rem;
  }
}

.remove {
  width: 1.2rem;
  height: 1.2rem !important;
  background-image: url("../../img/remove-icon.svg");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  cursor: pointer;
  box-shadow: none !important;
  background-color: transparent;
  &:hover {
    //background-image: url("../../img/remove-icon-black.svg");
    filter: brightness(0) saturate(100%) invert(0%) sepia(6%) saturate(657%) hue-rotate(340deg) brightness(96%)
      contrast(83%);
  }
}

button.flex {
  display: flex;
  align-items: center;

  img {
    width: auto;
    padding-right: 10px;
  }
}
