@import "./variables";

.btn.disabled,
.btn:disabled {
  opacity: 0.4;
}

a.btn,
button,
button.btn {
  font-family: $akkurat;
  letter-spacing: 1px;
  font-size: 1rem;
  font-weight: 700;
  line-height: 1;
  text-transform: uppercase;
  height: 3rem;
  border-radius: 1.5rem;
  box-shadow: 0 5px 17px rgb(89 89 89 / 7%);
  transition: all 0.3s ease;
  outline: 0;
  border: none;
  cursor: pointer;

  &:disabled,
  .disabled {
    cursor: not-allowed;
    pointer-events: all !important;
    background-color: $btn-orange;
    border-color: inherit;
    color: $white;
  }
}

button.btn-primary,
button.btn-primary:not(:disabled):not(.disabled):active,
button.btn-primary:not(:disabled):not(.disabled):focus,
button.btn-primary:not(:disabled):not(.disabled):active:focus,
button.btn-primary:not(:disabled):not(.disabled):hover {
  color: $white;
  border: solid 2px $bright-orange;
  background-color: $btn-orange;
  box-shadow: none;
  min-width: 100px;

  //min-width: min-content;
  padding: 0 1.125rem;

  &.btn-sm {
    padding: 0.5rem 1rem;
    font-size: 13px;
    min-width: fit-content;
    width: auto;
    height: auto;
    margin-top: 0;
    margin-bottom: 0;
    letter-spacing: 1px;
  }
}

button.btn-secondary,
button.btn-secondary:not(:disabled):not(.disabled):active,
button.btn-secondary:not(:disabled):not(.disabled):focus,
button.btn-secondary:not(:disabled):not(.disabled):active:focus,
button.btn-secondary:not(:disabled):not(.disabled):hover {
  color: $txt-orange;
  border: solid 2px $bright-orange;
  background-color: $white;
  box-shadow: none;
  min-width: 100px;

  //min-width: min-content;
  padding: 0 1.125rem;

  /* Login, Logout, Register button in Header */
  &.btn-sm {
    padding: 0.5rem 1rem;
    font-size: 13px;
    min-width: fit-content;
    width: auto;
    height: auto;
    margin-top: 0;
    margin-bottom: 0;
    letter-spacing: 1px;
  }
}

button.btn-primary:hover,
button.btn-secondary:hover {
  transform: scale(0.95);

  &:disabled,
  .disabled {
    transform: scale(1);
  }
}

/* color for CANCEL and CLOSE buttons in modals */
// ----- buttons that close modals ----  //
button.btn-close {
  background-color: transparent;
  margin: 0;
  box-shadow: none;
  height: 1rem;

  &:hover,
  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled):focus,
  &:not(:disabled):not(.disabled):active:focus {
    color: $txt-gray;
    background-color: transparent;
    box-shadow: none;
  }

  &.btn-sm {
    font-size: $txt-xs;
  }
}

/* styles for links that are also buttons */
button.btn-link {
  background-color: transparent;
  color: $txt-orange;
  border-radius: 0;
  border: none;
  box-shadow: none;
  margin: 0;
  text-decoration: none;
  padding: 0;

  &:hover,
  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled):focus,
  &:not(:disabled):not(.disabled):active:focus {
    color: $txt-orange;
    background-color: transparent;
    text-decoration: underline;
    box-shadow: none;
  }

  &.btn-sm {
    font-size: $txt-xs;
  }

  &.normal-case {
    text-transform: none;
  }

  &.lowercase {
    text-transform: lowercase;

    &.hide {
      display: none;
    }
  }
}

/* icon left of button text */
button.btn-icon {
  display: flex;
  align-items: center;
  justify-content: center;

  svg,
  img {
    margin-right: 0.5rem;
    width: auto;
  }
  &.freja-icon {
    img {
      height: 22px;
    }
  }
}

/* TODO possibly replace with .buttons */
.flex-buttons {
  display: flex;
  column-gap: 1rem;
  margin: 1em 0 0;

  button {
    min-width: 100px;
  }

  button[type="submit"] {
    order: 2;
  }
}

/* Wraps all buttons for responsive behaviour independend on number */
.buttons {
  display: flex;
  column-gap: 1rem;
  padding: 0.5rem 0;
  width: 100%;

  button {
    min-width: 100px;
  }

  @media (min-width: $bp-xs) {
    width: auto;
  }

  @media (max-width: $bp-md) {
    justify-content: center;
    align-self: normal;
  }

  @media (max-width: $bp-xs) {
    flex-direction: column-reverse;

    button {
      margin: 0.5rem 0;
    }
  }
}

// TODO: remove this when we move icon-text to a more generic place
.icon-text {
  display: flex;
  align-items: baseline;

  button.icon-only {
    &:hover {
      transform: rotate(180deg);
      padding: initial;
      cursor: pointer;
    }

    svg {
      color: $bright-orange;
    }
  }

  label.hint {
    font-family: inherit;
    line-height: 1.2;
    margin: 0 0 0 0.5rem;
    padding: 0;
  }
}

// login username-pw / reset-password set-new-password
.show-hide-button {
  @extend #{".btn", ".btn-link", ".btn-sm"};

  position: absolute;
  right: 1rem;
}

/* Instance/icon unique styles to be set in targeted css */
button.icon-only {
  @extend .icon;

  box-shadow: none;
  background: transparent;
  border-color: transparent;
  margin: 0;
  padding: 0;
}

@media (max-width: $bp-xs) {
  button.btn:not(.btn-sm) {
    font-size: $txt-sm;
  }

  button.btn-primary,
  button.btn-secondary {
    width: 100%;
  }

  button.btn.btn-link {
    width: auto;
    padding: 0;
  }
}

// a link focus
// a:focus {
//   box-shadow: 0 0 0 1px #f9f9d1, 0 0 0 2px #396196, 0 0 2px 4px #f9f9d1 !important;
// }

.btn-close.btn-sm:focus,
.header-user:focus {
  background-color: $body-gray !important;
}

//Scroll To top button
.scroll-to-top {
  display: block;
  position: fixed;
  bottom: 2.3rem;
  right: 10px;
  // round button
  opacity: 70%;
  border-radius: 50% !important;
  min-width: fit-content !important;
  width: 60px;
  height: 60px !important;
}

.display-none {
  display: none;
}

@media (max-width: $bp-xs) {
  button.scroll-to-top {
    width: 60px;
  }
}
